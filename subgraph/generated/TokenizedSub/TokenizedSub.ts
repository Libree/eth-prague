// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Subscription extends ethereum.Event {
  get params(): Subscription__Params {
    return new Subscription__Params(this);
  }
}

export class Subscription__Params {
  _event: Subscription;

  constructor(event: Subscription) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get follower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class TokenizedSub__getProfileDataResultValue0Struct extends ethereum.Tuple {
  get currency(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get recipient(): Address {
    return this[2].toAddress();
  }
}

export class TokenizedSub extends ethereum.SmartContract {
  static bind(address: Address): TokenizedSub {
    return new TokenizedSub("TokenizedSub", address);
  }

  HUB(): Address {
    let result = super.call("HUB", "HUB():(address)", []);

    return result[0].toAddress();
  }

  try_HUB(): ethereum.CallResult<Address> {
    let result = super.tryCall("HUB", "HUB():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getProfileData(
    profileId: BigInt
  ): TokenizedSub__getProfileDataResultValue0Struct {
    let result = super.call(
      "getProfileData",
      "getProfileData(uint256):((address,uint256,address))",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );

    return changetype<TokenizedSub__getProfileDataResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getProfileData(
    profileId: BigInt
  ): ethereum.CallResult<TokenizedSub__getProfileDataResultValue0Struct> {
    let result = super.tryCall(
      "getProfileData",
      "getProfileData(uint256):((address,uint256,address))",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<TokenizedSub__getProfileDataResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  initializeFollowModule(profileId: BigInt, data: Bytes): Bytes {
    let result = super.call(
      "initializeFollowModule",
      "initializeFollowModule(uint256,bytes):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromBytes(data)
      ]
    );

    return result[0].toBytes();
  }

  try_initializeFollowModule(
    profileId: BigInt,
    data: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "initializeFollowModule",
      "initializeFollowModule(uint256,bytes):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromBytes(data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isFollowing(
    profileId: BigInt,
    follower: Address,
    followNFTTokenId: BigInt
  ): boolean {
    let result = super.call(
      "isFollowing",
      "isFollowing(uint256,address,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromAddress(follower),
        ethereum.Value.fromUnsignedBigInt(followNFTTokenId)
      ]
    );

    return result[0].toBoolean();
  }

  try_isFollowing(
    profileId: BigInt,
    follower: Address,
    followNFTTokenId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isFollowing",
      "isFollowing(uint256,address,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromAddress(follower),
        ethereum.Value.fromUnsignedBigInt(followNFTTokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get hub(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class FollowModuleTransferHookCall extends ethereum.Call {
  get inputs(): FollowModuleTransferHookCall__Inputs {
    return new FollowModuleTransferHookCall__Inputs(this);
  }

  get outputs(): FollowModuleTransferHookCall__Outputs {
    return new FollowModuleTransferHookCall__Outputs(this);
  }
}

export class FollowModuleTransferHookCall__Inputs {
  _call: FollowModuleTransferHookCall;

  constructor(call: FollowModuleTransferHookCall) {
    this._call = call;
  }

  get profileId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get followNFTTokenId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class FollowModuleTransferHookCall__Outputs {
  _call: FollowModuleTransferHookCall;

  constructor(call: FollowModuleTransferHookCall) {
    this._call = call;
  }
}

export class InitializeFollowModuleCall extends ethereum.Call {
  get inputs(): InitializeFollowModuleCall__Inputs {
    return new InitializeFollowModuleCall__Inputs(this);
  }

  get outputs(): InitializeFollowModuleCall__Outputs {
    return new InitializeFollowModuleCall__Outputs(this);
  }
}

export class InitializeFollowModuleCall__Inputs {
  _call: InitializeFollowModuleCall;

  constructor(call: InitializeFollowModuleCall) {
    this._call = call;
  }

  get profileId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class InitializeFollowModuleCall__Outputs {
  _call: InitializeFollowModuleCall;

  constructor(call: InitializeFollowModuleCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class ProcessFollowCall extends ethereum.Call {
  get inputs(): ProcessFollowCall__Inputs {
    return new ProcessFollowCall__Inputs(this);
  }

  get outputs(): ProcessFollowCall__Outputs {
    return new ProcessFollowCall__Outputs(this);
  }
}

export class ProcessFollowCall__Inputs {
  _call: ProcessFollowCall;

  constructor(call: ProcessFollowCall) {
    this._call = call;
  }

  get follower(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get profileId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ProcessFollowCall__Outputs {
  _call: ProcessFollowCall;

  constructor(call: ProcessFollowCall) {
    this._call = call;
  }
}
